# Please note we are using Docker Compose version 3
version: '3'
services:
  # Configuration for our seed cassandra node. The node is call cassandra01
  # .i.e Node 1 in Data center 1.
  cassandra01:
      # Cassandra image for Cassandra version 3.1.0. This is pulled
      # from the docker store.
      image: cassandra:3.10
      container_name: cassandra01
      # In case this is the first time starting up cassandra we need to ensure
      # that all nodes do not start up at the same time. Cassandra has a
      # 2 minute rule i.e. 2 minutes between each node boot up. Booting up
      # nodes simultaneously is a mistake. This only needs to happen the firt
      # time we bootup. Configuration below assumes if the Cassandra data
      # directory is empty it means that we are starting up for the first
      # time.
      command: bash -c 'if [ -z "$$(ls -A /var/lib/cassandra/)" ] ; then sleep 0; fi && /docker-entrypoint.sh cassandra -f'
      # Network for the nodes to communicate
      networks:
          - cassandranet
      # Maps cassandra data to a local folder. This preserves data across
      # container restarts. Note a folder n1data get created locally
      volumes:
          - ./n1data:/var/lib/cassandra
      # Docker constainer environment variable. We are using the
      # CASSANDRA_CLUSTER_NAME to name the cluster. This needs to be the same
      # across clusters. We are also declaring that cassandra01 is a seed node.
      environment:
          - CASSANDRA_CLUSTER_NAME=dev_cluster
          - CASSANDRA_SEEDS=cassandra01
      # Exposing ports for inter cluste communication
      expose:
          - 7000
          - 7001
          - 7199
          - 9042
          - 9160
      # Cassandra ulimt recommended settings
      ulimits:
          memlock: -1
          nproc: 32768
          nofile: 100000
  # This is configuration for our non seed cassandra node. The node is call
  # cassandra01 .i.e Node 2 in Data center 1.
  cassandra02:
      # Cassandra image for Cassandra version 3.1.0. This is pulled
      # from the docker store.
      image: cassandra:3.10
      container_name: cassandra02
      # In case this is the first time starting up cassandra we need to ensure
      # that all nodes do not start up at the same time. Cassandra has a
      # 2 minute rule i.e. 2 minutes between each node boot up. Booting up
      # nodes simultaneously is a mistake. This only needs to happen the firt
      # time we bootup. Configuration below assumes if the Cassandra data
      # directory is empty it means that we are starting up for the first
      # time.
      command: bash -c 'if [ -z "$$(ls -A /var/lib/cassandra/)" ] ; then sleep 60; fi && /docker-entrypoint.sh cassandra -f'
      # Network for the nodes to communicate
      networks:
          - cassandranet
      # Maps cassandra data to a local folder. This preserves data across
      # container restarts. Note a folder n1data get created locally
      volumes:
          - ./n2data:/var/lib/cassandra
      # Docker constainer environment variable. We are using the
      # CASSANDRA_CLUSTER_NAME to name the cluster. This needs to be the same
      # across clusters. We are also declaring that cassandra01 is a seed node.
      environment:
          - CASSANDRA_CLUSTER_NAME=dev_cluster
          - CASSANDRA_SEEDS=cassandra01
      # Since cassandra01 is the seed node
      depends_on:
            - cassandra01
      # Exposing ports for inter cluste communication. Note this is already
      # done by the docker file. Just being explict about it.
      expose:
          # Intra-node communication
          - 7000
          # TLS intra-node communication
          - 7001
          # JMX
          - 7199
          # CQL
          - 9042
          # Thrift service
          - 9160
      # Cassandra ulimt recommended settings
      ulimits:
          memlock: -1
          nproc: 32768
          nofile: 100000

  # This is configuration for our non seed cassandra node. The node is call
  # cassandra03 .i.e Node 3 in Data center 1.
  cassandra03:
      image: cassandra:3.10
      container_name: cassandra03
      # In case this is the first time starting up cassandra we need to ensure
      # that all nodes do not start up at the same time. Cassandra has a
      # 2 minute rule i.e. 2 minutes between each node boot up. Booting up
      # nodes simultaneously is a mistake. This only needs to happen the firt
      # time we bootup. Configuration below assumes if the Cassandra data
      # directory is empty it means that we are starting up for the first
      # time.
      command: bash -c 'if [ -z "$$(ls -A /var/lib/cassandra/)" ] ; then sleep 120; fi && /docker-entrypoint.sh cassandra -f'
      # Network for the nodes to communicate. This is pulled from docker hub.
      networks:
          - cassandranet
      # Maps cassandra data to a local folder. This preserves data across
      # container restarts. Note a folder n1data get created locally
      volumes:
          - ./n3data:/var/lib/cassandra
      # Docker constainer environment variable. We are using the
      # CASSANDRA_CLUSTER_NAME to name the cluster. This needs to be the same
      # across clusters. We are also declaring that cassandra01 is a seed node.
      environment:
          - CASSANDRA_CLUSTER_NAME= dev_cluster
          - CASSANDRA_SEEDS=cassandra01
      # Since cassandra01 is the seed node
      depends_on:
            - cassandra01
      # Exposing ports for inter cluste communication. Note this is already
      # done by the docker file. Just being explict about it.
      expose:
          # Intra-node communication
          - 7000
          # TLS intra-node communication
          - 7001
          # JMX
          - 7199
          # CQL
          - 9042
          # Thrift service
          - 9160
      # Cassandra ulimt recommended settings
      ulimits:
          memlock: -1
          nproc: 32768
          nofile: 100000
  # A web based interface for managing your docker containers.
  portainer:
      image: portainer/portainer
      container_name: portainer
      networks:
          - cassandranet
      volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - ./portainer-data:/data
      # Enable you to access potainers web interface from your host machine
      # using http://localhost:10001
      ports:
          - "10001:9000"
networks:
    cassandranet: