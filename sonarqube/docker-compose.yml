version: '2.3'                                                                                                                                                                                              
                                                  
services:   
  sonarqube:               
    image: sonarqube:7.6-community
    container_name: sonarqube
    hostname: sonarqube
    mem_limit: 2048m
    ports:      
      - "9000:9000"                                
    networks:      
      - sonarnet 
    restart: always
    environment:
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=Password1234!
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:5432/sonar
    volumes:
      - ./sonarqube_conf:/opt/sonarqube/conf
      - ./sonarqube_data:/opt/sonarqube/data
      - ./sonarqube_extensions:/opt/sonarqube/extensions
      - ./sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    depends_on:
      postgres:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/api/system/status"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:10
    container_name: postgres
    hostname: postgres
    mem_limit: 2048m
    networks:
      - sonarnet
    restart: always
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=Password1234!
    volumes:
      - ./postgresql:/var/lib/postgresql
      - ./postgresql_data:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
          max-size: "100m"
          max-file: "5"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  sonarnet:
    driver: bridge
